[{"/Users/fionaberkery/CodeClan_work/week_10/PROJECT/chi-beas/client/src/index.js":"1","/Users/fionaberkery/CodeClan_work/week_10/PROJECT/chi-beas/client/src/containers/GameContainer.js":"2","/Users/fionaberkery/CodeClan_work/week_10/PROJECT/chi-beas/client/src/components/Header.js":"3","/Users/fionaberkery/CodeClan_work/week_10/PROJECT/chi-beas/client/src/components/Timer.js":"4","/Users/fionaberkery/CodeClan_work/week_10/PROJECT/chi-beas/client/src/components/Score.js":"5","/Users/fionaberkery/CodeClan_work/week_10/PROJECT/chi-beas/client/src/components/FinishPage.js":"6"},{"size":298,"mtime":1653829959643,"results":"7","hashOfConfig":"8"},{"size":2454,"mtime":1653835975435,"results":"9","hashOfConfig":"8"},{"size":116,"mtime":1653829959641,"results":"10","hashOfConfig":"8"},{"size":828,"mtime":1653831371869,"results":"11","hashOfConfig":"8"},{"size":713,"mtime":1653835881669,"results":"12","hashOfConfig":"8"},{"size":217,"mtime":1653835963280,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4y50sq",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/fionaberkery/CodeClan_work/week_10/PROJECT/chi-beas/client/src/index.js",[],[],"/Users/fionaberkery/CodeClan_work/week_10/PROJECT/chi-beas/client/src/containers/GameContainer.js",["36","37","38"],[],"import '../App.css';\nimport React, {useState, useEffect, useRef} from 'react';\nimport Header from '../components/Header.js'\nimport Score from '../components/Score';\nimport Timer from '../components/Timer';\nimport FinishPage from '../components/FinishPage';\nimport egg from \"../images/Egg.png\"\nconst spriteWidth = 180\nconst spriteHeight = 120\nlet frameX = 0\nlet frameY = 0\nlet gameFrame = 0\nconst staggerFrames = 15\nconst TIME_LIMIT = 5000;\n\n\nconst Canvas = props =>{\n\n  const canvasRef = useRef (null)\n\n  const eggImage = new Image()\n  eggImage.src = egg\n\n  const draw = (context, frameCount) => {\n    context.clearRect (0,0,context.canvas.width, context.canvas.height)\n    // context.fillReact = (100,30,100,100)\n    context.drawImage(eggImage, frameX * spriteWidth, frameY * spriteHeight, spriteWidth, spriteHeight, 0, 0, spriteWidth,spriteHeight)\n    if (gameFrame % staggerFrames == 0){\n      if (frameX < 4) frameX++ \n      else frameX = 0\n    }\n    gameFrame++\n    context.fill()\n  } \n\n  useEffect (() =>{\n    const canvas = canvasRef.current\n    const context = canvas.getContext(\"2d\")\n    let frameCount = 0\n    let animationFrameId\n    const render = () => {\n      frameCount++\n      draw(context, frameCount)\n      animationFrameId = window.requestAnimationFrame(render)\n    }\n    render()\n    return () => {\n      window.cancelAnimationFrame(animationFrameId)}\n    },[draw])\n  return <canvas ref={canvasRef} {...props}/>\n}\n\nconst  Game = (()=> {\n  \n  const [playing, setPlaying] = useState(false)\n  const [finished, setFinished] = useState(false)\n  const [runningScore, setRunningScore] = useState(0)\n  const [finalScore, setFinalScore] = useState(0)\n\n  const endGame = (()=>{\n    setPlaying (false)\n    setFinished(true)   \n    setFinalScore(finalScore)\n})\n\nconst startGame = (()=>{\n    setPlaying (true)\n    setFinished(false)\n})\n\n  return (\n    <>\n    {!playing && !finished &&\n      <>\n        <h1>Start Game</h1> \n        <button onClick={startGame}>Start the Game!</button>\n      </>}\n    \n    {playing && !finished &&\n      <>\n        <h1>Playing Game</h1> \n        <Timer time={TIME_LIMIT} onEnd={endGame}/>\n        <Score setFinalScore={setFinalScore} runningScore={runningScore} setRunningScore={setRunningScore} />\n        <br></br>\n        <Canvas id=\"canvas\"></Canvas>\n      </>}\n    \n\n      {!playing && finished &&\n      <>\n        \n        <FinishPage finalScore={finalScore}/> \n      </>}\n    </>\n  )\n})\n\nexport default Game;\n","/Users/fionaberkery/CodeClan_work/week_10/PROJECT/chi-beas/client/src/components/Header.js",[],[],"/Users/fionaberkery/CodeClan_work/week_10/PROJECT/chi-beas/client/src/components/Timer.js",["39","40","41"],[],"import React, {useEffect, useRef, useState } from 'react'\n\nconst Timer = ({ time, onEnd }) => {\n    \n    const second = 1000\n    const [internalTime, setInternalTime] = useState(time)\n    const [timeRate, setTimeRate] = useState (second)\n    const [sad, setSad] = useState(false)\n    \n    const healthBarRef = useRef(time)  \n    const timeRef = useRef(time)\n\n    useEffect(() => {\n        if (internalTime === 0 && onEnd) {\n        onEnd()\n        }\n    }, [internalTime, onEnd])\n\n    useEffect(() => {\n        healthBarRef.current = setInterval(\n        () => setInternalTime((timeRef.current -= timeRate)),\n        timeRate\n        )\n        return () => {\n        clearInterval(healthBarRef.current)\n        }\n    }, [timeRate])\n    \n    \n    return <div>{`Time: ${internalTime / 1000}s`}</div>\n    }\n\n\nexport default Timer  ",[],"/Users/fionaberkery/CodeClan_work/week_10/PROJECT/chi-beas/client/src/components/Score.js",["42","43"],[],"import React, {useEffect, useState, useRef} from 'react'\n\nconst Score = ({runningScore, setRunningScore, finalScore, setFinalScore}) => {\n\n    const second = 1000\n    const [scoreRate, setScoreRate] = useState(second)\n\n    const scoreRef = useRef(runningScore)\n\n    useEffect(() => {\n        scoreRef.current = setInterval(() => {\n            setRunningScore((scoreRef.current += scoreRate))\n        }, scoreRate)\n        return () => {\n            clearInterval(scoreRef.current)\n        }\n    }, [scoreRate])\n\n    let score = Math.floor((scoreRef.current / 1000) * 5)\n    setFinalScore(score)\n    \n    return (\n    \n            <div> Running score : {score} </div>\n    \n            )\n    }\n\nexport default Score","/Users/fionaberkery/CodeClan_work/week_10/PROJECT/chi-beas/client/src/components/FinishPage.js",[],[],{"ruleId":"44","severity":1,"message":"45","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":14},{"ruleId":"48","severity":1,"message":"49","line":24,"column":9,"nodeType":"50","endLine":34,"endColumn":4},{"ruleId":"51","severity":1,"message":"52","line":28,"column":35,"nodeType":"53","messageId":"54","endLine":28,"endColumn":37},{"ruleId":"44","severity":1,"message":"55","line":7,"column":22,"nodeType":"46","messageId":"47","endLine":7,"endColumn":33},{"ruleId":"44","severity":1,"message":"56","line":8,"column":12,"nodeType":"46","messageId":"47","endLine":8,"endColumn":15},{"ruleId":"44","severity":1,"message":"57","line":8,"column":17,"nodeType":"46","messageId":"47","endLine":8,"endColumn":23},{"ruleId":"44","severity":1,"message":"58","line":6,"column":23,"nodeType":"46","messageId":"47","endLine":6,"endColumn":35},{"ruleId":"48","severity":1,"message":"59","line":17,"column":8,"nodeType":"60","endLine":17,"endColumn":19,"suggestions":"61"},"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","The 'draw' function makes the dependencies of useEffect Hook (at line 49) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'draw' in its own useCallback() Hook.","VariableDeclarator","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setTimeRate' is assigned a value but never used.","'sad' is assigned a value but never used.","'setSad' is assigned a value but never used.","'setScoreRate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setRunningScore'. Either include it or remove the dependency array. If 'setRunningScore' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["62"],{"desc":"63","fix":"64"},"Update the dependencies array to be: [scoreRate, setRunningScore]",{"range":"65","text":"66"},[498,509],"[scoreRate, setRunningScore]"]